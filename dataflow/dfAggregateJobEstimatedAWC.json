{
	"name": "dfAggregateJobEstimatedAWC",
	"properties": {
		"folder": {
			"name": "Handoff"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "dsJobAssignment",
						"type": "DatasetReference"
					},
					"name": "JobAssignment"
				},
				{
					"dataset": {
						"referenceName": "dsSourceFileForecasting",
						"type": "DatasetReference"
					},
					"name": "SourceFileWC"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "dsHandoffJobForecasting",
						"type": "DatasetReference"
					},
					"name": "SinkToJobForecasting"
				}
			],
			"transformations": [
				{
					"name": "JoinSourceFileForecasting"
				},
				{
					"name": "AggregateAWC"
				},
				{
					"name": "AlterPolicy"
				},
				{
					"name": "NormalizeEstimatedAWC"
				}
			],
			"script": "parameters{\n\tTenantId as string,\n\tLocConfigurationId as string,\n\tJobId as string\n}\nsource(output(\n\t\tSourceFileId as integer,\n\t\tLocConfigurationId as string,\n\t\tTenantId as string,\n\t\tFileTrackingId as string,\n\t\tVersion as string,\n\t\tJobId as string,\n\t\tTenantName as string,\n\t\tHostContentStoreName as string,\n\t\tContentGroupName as string,\n\t\tDefaultTreatmentPreference as string,\n\t\tTimestamp as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: (\"select * from JobAssignment where LocConfigurationId = '{$LocConfigurationId}' and JobId = '{$JobId}'\"),\n\tformat: 'query') ~> JobAssignment\nsource(output(\n\t\tId as integer,\n\t\tTenantId as string,\n\t\tLocConfigurationId as string,\n\t\tFileTrackingId as string,\n\t\tVersion as string,\n\t\tContentType as string,\n\t\tEstimateWC as integer,\n\t\tEstimateAWC as double,\n\t\tEstimateCost as double\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: (\"select * from SourceFileForecasting where LocConfigurationId = '{$LocConfigurationId}'\"),\n\tformat: 'query') ~> SourceFileWC\nJobAssignment, SourceFileWC join(JobAssignment@LocConfigurationId == SourceFileWC@LocConfigurationId\n\t&& JobAssignment@TenantId == SourceFileWC@TenantId\n\t&& JobAssignment@FileTrackingId == SourceFileWC@FileTrackingId\n\t&& JobAssignment@Version == SourceFileWC@Version,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinSourceFileForecasting\nNormalizeEstimatedAWC aggregate(groupBy(JobAssignment@TenantId,\n\t\tJobAssignment@LocConfigurationId,\n\t\tJobId),\n\tTotalEstimatedAWC = sum(NormalizedEstimatedAWC)) ~> AggregateAWC\nAggregateAWC alterRow(upsertIf(true())) ~> AlterPolicy\nJoinSourceFileForecasting derive(NormalizedEstimatedAWC = iifNull(EstimateAWC, 0)) ~> NormalizeEstimatedAWC\nAlterPolicy sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tTenantId as string,\n\t\tLocConfigurationId as string,\n\t\tJobId as string,\n\t\tEstimatedWC as integer,\n\t\tEstimatedAWC as double,\n\t\tPrice as double,\n\t\tHTLocalesCount as integer,\n\t\tEstimatedCost as string,\n\t\tRunningBudget as double,\n\t\tIsOverBudget as boolean\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:true,\n\tupsertable:true,\n\tkeys:['TenantId','LocConfigurationId','JobId'],\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tTenantId,\n\t\tLocConfigurationId,\n\t\tJobId,\n\t\tEstimatedAWC = TotalEstimatedAWC\n\t)) ~> SinkToJobForecasting"
		}
	}
}